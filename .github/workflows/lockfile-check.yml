---
name: Lockfile (weekly PR)

"on":
  schedule:
    - cron: "0 5 * * 1"
  workflow_dispatch:

concurrency:
  group: lockfile-${{ github.ref }}
  cancel-in-progress: true

jobs:
  upgrade:
    name: Compile & PR lockfiles
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: pyproject.toml

      - name: Install pip-tools
        run: |
          python -m pip install -U pip wheel setuptools
          python -m pip install -U pip-tools

      - name: Compile lockfiles (upgrade)
        run: |
          pip-compile pyproject.toml \
            -o requirements.txt --upgrade
          pip-compile pyproject.toml \
            --extra dev -o requirements-dev.txt --upgrade
          pip-compile pyproject.toml \
            --extra full -o requirements-full.txt --upgrade

      - name: Security audit (pip-audit, non-blocking)
        run: |
          python -m pip install -q pip-audit
          if [ -f requirements.txt ]; then pip-audit \
            -r requirements.txt || true; fi
          if [ -f requirements-dev.txt ]; then pip-audit \
            -r requirements-dev.txt || true; fi
          if [ -f requirements-full.txt ]; then pip-audit \
            -r requirements-full.txt || true; fi

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          branch: chore/lockfile-update
          title: "chore(deps): update compiled lockfiles"
          commit-message: "chore(deps): update lockfiles via pip-compile"
          labels: dependencies, automated
          draft: false
          add-paths: |
            requirements.txt
            requirements-dev.txt
            requirements-full.txt
          body: |
            Auto-generated by lockfile-check.
            - Updated requirements
            - Security audit run with pip-audit (non-blocking)
